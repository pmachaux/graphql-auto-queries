{
  "version": 3,
  "sources": ["../../../libs/gaq/src/lib/gaq.ts", "../../../apps/test-app/src/main.ts"],
  "sourcesContent": ["import { ApolloServer } from '@apollo/server';\nimport { startStandaloneServer } from '@apollo/server/standalone';\n\nconst books = [\n  {\n    title: 'The Awakening',\n    author: 'Kate Chopin',\n  },\n  {\n    title: 'City of Glass',\n    author: 'Paul Auster',\n  },\n];\n\nconst typeDefs = `\ntype Book {\n  title: String\n  author: String\n}\n\ntype Query {\n  books: [Book]\n}\n`;\n\nconst resolvers = {\n  Query: {\n    books: () => books,\n  },\n};\n\nexport function getGraphQLAutoQueriesServer(): ApolloServer {\n  const server = new ApolloServer({\n    typeDefs,\n    resolvers,\n  });\n\n  return server;\n}\n\nexport const startGraphQLAutoQueriesServer = startStandaloneServer;\n", "import {\n  getGraphQLAutoQueriesServer,\n  startGraphQLAutoQueriesServer,\n} from '@gaq';\n\nconst server = getGraphQLAutoQueriesServer();\nconst { url } = await startGraphQLAutoQueriesServer(server, {\n  listen: { port: 4200 },\n});\n\nconsole.log(`\uD83D\uDE80  Server ready at: ${url}`);\n"],
  "mappings": ";AAAA,SAAS,oBAAoB;AAC7B,SAAS,6BAA6B;AAEtC,IAAM,QAAQ;AAAA,EACZ;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,EACV;AAAA,EACA;AAAA,IACE,OAAO;AAAA,IACP,QAAQ;AAAA,EACV;AACF;AAEA,IAAM,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWjB,IAAM,YAAY;AAAA,EAChB,OAAO;AAAA,IACL,OAAO,MAAM;AAAA,EACf;AACF;AAEO,SAAS,8BAA4C;AAC1D,QAAMA,UAAS,IAAI,aAAa;AAAA,IAC9B;AAAA,IACA;AAAA,EACF,CAAC;AAED,SAAOA;AACT;AAEO,IAAM,gCAAgC;;;ACnC7C,IAAM,SAAS,4BAA4B;AAC3C,IAAM,EAAE,IAAI,IAAI,MAAM,8BAA8B,QAAQ;AAAA,EAC1D,QAAQ,EAAE,MAAM,KAAK;AACvB,CAAC;AAED,QAAQ,IAAI,+BAAwB,GAAG,EAAE;",
  "names": ["server"]
}
